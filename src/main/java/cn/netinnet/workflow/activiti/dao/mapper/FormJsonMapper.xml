<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.netinnet.workflow.activiti.dao.FormJsonMapper">
  <resultMap id="BaseResultMap" type="cn.netinnet.workflow.activiti.domain.FormJson">
    <id column="id" jdbcType="BIGINT" property="id" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.netinnet.workflow.activiti.domain.FormJson">
    <result column="json_data" jdbcType="LONGVARCHAR" property="jsonData" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id
  </sql>
  <sql id="Blob_Column_List">
    json_data
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.netinnet.workflow.activiti.domain.FormJsonExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from form_json
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.netinnet.workflow.activiti.domain.FormJsonExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from form_json
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from form_json
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from form_json
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.netinnet.workflow.activiti.domain.FormJsonExample">
    delete from form_json
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="cn.netinnet.workflow.activiti.domain.FormJsonExample" resultType="java.lang.Long">
    select count(*) from form_json
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update form_json
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.jsonData != null">
        json_data = #{record.jsonData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update form_json
    set id = #{record.id,jdbcType=BIGINT},
      json_data = #{record.jsonData,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update form_json
    set id = #{record.id,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.netinnet.workflow.activiti.domain.FormJson">
    update form_json
    <set>
      <if test="jsonData != null">
        json_data = #{jsonData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.netinnet.workflow.activiti.domain.FormJson">
    update form_json
    set json_data = #{jsonData,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="sql_columns">
    insert into form_json
	<trim prefix="(" suffix=") values" suffixOverrides=",">
		id,json_data,
	</trim>
  </sql>
  <sql id="sql_values">
    <trim prefix="(" suffix=")" prefixOverrides=",">
		, #{item.id}
		, #{item.jsonData}
	</trim>	
  </sql>
  <sql id="sql_where">
    <where>
		<if test="null != item.id">and id = #{item.id}</if>
		<if test="null != item.jsonData">and json_data = #{item.jsonData}</if>
	</where>
  </sql>
  <sql id="sql_update">
    update form_json set 
	<trim prefix="" suffix="" prefixOverrides=",">
		<if test="null != item.id">, id = #{item.id}</if>
		<if test="null != item.jsonData">, json_data = #{item.jsonData}</if>
	</trim>
	where  id = #{item.id}
  </sql>
  <sql id="sql_save_columns">
    insert into form_json
	<trim prefix="(" suffix=") values" prefixOverrides=",">
		<if test="null != list[0].id">, id</if>
		<if test="null != list[0].jsonData">, json_data</if>
	</trim>	
  </sql>
  <sql id="sql_save_values">
    <trim prefix="(" suffix=")" prefixOverrides=",">
		<if test="null != item.id">, #{item.id}</if>
		<if test="null != item.jsonData">, #{item.jsonData}</if>
	</trim>	
  </sql>
  <insert id="batchInsert" parameterType="java.util.List">
    <include refid="sql_columns" />
	<foreach collection="list" index="index" item="item" open="" separator="," close="">
	  <include refid="sql_values" />
	</foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="java.util.List">
    <include refid="sql_save_columns" />
	<foreach collection="list" index="index" item="item" open="" separator="," close="">
	  <include refid="sql_save_values" />
	</foreach>
  </insert>
  <update id="batchUpdateByPrimaryKey">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="sql_update" />
	</foreach>
  </update>
  <insert id="insertSelective" parameterType="cn.netinnet.workflow.activiti.domain.FormJson">
    insert into form_json
	<trim prefix="(" suffix=") " suffixOverrides=",">
		<if test="null != id"> id,</if>
		<if test="null != jsonData"> json_data,</if>
	</trim>
	 <trim prefix=" values(" suffix=")" suffixOverrides=",">
		<if test="null != id"> #{id,jdbcType=BIGINT},</if>
		<if test="null != jsonData"> #{jsonData,jdbcType=LONGVARCHAR},</if>
	</trim>
  </insert>
  <delete id="batchDeleteByArray">
    delete from form_json where id in
	<foreach collection="array" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="batchDeleteByList">
    delete from form_json where id in
	<foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <select id="getList" parameterType="cn.netinnet.workflow.activiti.domain.FormJson" resultMap="BaseResultMap">
     select id,json_data from form_json
    <include refid="sql_where" />
  </select>
</mapper>