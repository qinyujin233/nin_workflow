<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.netinnet.workflow.user.dao.WorkflowRoleMapper">
  <resultMap id="BaseResultMap" type="cn.netinnet.workflow.user.domain.WorkflowRole">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_code, role_name
  </sql>
  <select id="selectByExample" parameterType="cn.netinnet.workflow.user.domain.WorkflowRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from workflow_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from workflow_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from workflow_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.netinnet.workflow.user.domain.WorkflowRoleExample">
    delete from workflow_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="cn.netinnet.workflow.user.domain.WorkflowRoleExample" resultType="java.lang.Long">
    select count(*) from workflow_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update workflow_role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.roleCode != null">
        role_code = #{record.roleCode,jdbcType=VARCHAR},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update workflow_role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      role_code = #{record.roleCode,jdbcType=VARCHAR},
      role_name = #{record.roleName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.netinnet.workflow.user.domain.WorkflowRole">
    update workflow_role
    <set>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <sql id="sql_columns">
    insert into workflow_role
	<trim prefix="(" suffix=") values" suffixOverrides=",">
		role_id,role_code,role_name,
	</trim>
  </sql>
  <sql id="sql_values">
    <trim prefix="(" suffix=")" prefixOverrides=",">
		, #{item.roleId}
		, #{item.roleCode}
		, #{item.roleName}
	</trim>	
  </sql>
  <sql id="sql_where">
    <where>
		<if test="null != item.roleId">and role_id = #{item.roleId}</if>
		<if test="null != item.roleCode">and role_code = #{item.roleCode}</if>
		<if test="null != item.roleName">and role_name = #{item.roleName}</if>
	</where>
  </sql>
  <sql id="sql_update">
    update workflow_role set 
	<trim prefix="" suffix="" prefixOverrides=",">
		<if test="null != item.roleId">, role_id = #{item.roleId}</if>
		<if test="null != item.roleCode">, role_code = #{item.roleCode}</if>
		<if test="null != item.roleName">, role_name = #{item.roleName}</if>
	</trim>
	where  role_id = #{item.roleId}
  </sql>
  <sql id="sql_save_columns">
    insert into workflow_role
	<trim prefix="(" suffix=") values" prefixOverrides=",">
		<if test="null != list[0].roleId">, role_id</if>
		<if test="null != list[0].roleCode">, role_code</if>
		<if test="null != list[0].roleName">, role_name</if>
	</trim>	
  </sql>
  <sql id="sql_save_values">
    <trim prefix="(" suffix=")" prefixOverrides=",">
		<if test="null != item.roleId">, #{item.roleId}</if>
		<if test="null != item.roleCode">, #{item.roleCode}</if>
		<if test="null != item.roleName">, #{item.roleName}</if>
	</trim>	
  </sql>
  <insert id="batchInsert" parameterType="java.util.List">
    <include refid="sql_columns" />
	<foreach collection="list" index="index" item="item" open="" separator="," close="">
	  <include refid="sql_values" />
	</foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="java.util.List">
    <include refid="sql_save_columns" />
	<foreach collection="list" index="index" item="item" open="" separator="," close="">
	  <include refid="sql_save_values" />
	</foreach>
  </insert>
  <update id="batchUpdateByPrimaryKey">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="sql_update" />
	</foreach>
  </update>
  <insert id="insertSelective" parameterType="cn.netinnet.workflow.user.domain.WorkflowRole">
    insert into workflow_role
	<trim prefix="(" suffix=") " suffixOverrides=",">
		<if test="null != roleId"> role_id,</if>
		<if test="null != roleCode"> role_code,</if>
		<if test="null != roleName"> role_name,</if>
	</trim>
	 <trim prefix=" values(" suffix=")" suffixOverrides=",">
		<if test="null != roleId"> #{roleId,jdbcType=BIGINT},</if>
		<if test="null != roleCode"> #{roleCode,jdbcType=VARCHAR},</if>
		<if test="null != roleName"> #{roleName,jdbcType=VARCHAR},</if>
	</trim>
  </insert>
  <delete id="batchDeleteByArray">
    delete from workflow_role where role_id in
	<foreach collection="array" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="batchDeleteByList">
    delete from workflow_role where role_id in
	<foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <select id="getList" parameterType="cn.netinnet.workflow.user.domain.WorkflowRole" resultMap="BaseResultMap">
     select role_id,role_code, role_name from workflow_role
    <include refid="sql_where" />
  </select>
</mapper>