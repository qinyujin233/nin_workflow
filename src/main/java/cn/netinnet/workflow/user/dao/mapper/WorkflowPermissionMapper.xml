<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.netinnet.workflow.user.dao.WorkflowPermissionMapper">
  <resultMap id="BaseResultMap" type="cn.netinnet.workflow.user.domain.WorkflowPermission">
    <id column="permission_id" jdbcType="BIGINT" property="permissionId" />
    <result column="permission_name" jdbcType="VARCHAR" property="permissionName" />
    <result column="resource_type" jdbcType="VARCHAR" property="resourceType" />
    <result column="permission" jdbcType="VARCHAR" property="permission" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    permission_id, permission_name, resource_type, permission, parent_id
  </sql>
  <select id="selectByExample" parameterType="cn.netinnet.workflow.user.domain.WorkflowPermissionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from workflow_permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from workflow_permission
    where permission_id = #{permissionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from workflow_permission
    where permission_id = #{permissionId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.netinnet.workflow.user.domain.WorkflowPermissionExample">
    delete from workflow_permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="cn.netinnet.workflow.user.domain.WorkflowPermissionExample" resultType="java.lang.Long">
    select count(*) from workflow_permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update workflow_permission
    <set>
      <if test="record.permissionId != null">
        permission_id = #{record.permissionId,jdbcType=BIGINT},
      </if>
      <if test="record.permissionName != null">
        permission_name = #{record.permissionName,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceType != null">
        resource_type = #{record.resourceType,jdbcType=VARCHAR},
      </if>
      <if test="record.permission != null">
        permission = #{record.permission,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update workflow_permission
    set permission_id = #{record.permissionId,jdbcType=BIGINT},
      permission_name = #{record.permissionName,jdbcType=VARCHAR},
      resource_type = #{record.resourceType,jdbcType=VARCHAR},
      permission = #{record.permission,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.netinnet.workflow.user.domain.WorkflowPermission">
    update workflow_permission
    <set>
      <if test="permissionName != null">
        permission_name = #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null">
        resource_type = #{resourceType,jdbcType=VARCHAR},
      </if>
      <if test="permission != null">
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
    </set>
    where permission_id = #{permissionId,jdbcType=BIGINT}
  </update>
  <sql id="sql_columns">
    insert into workflow_permission
	<trim prefix="(" suffix=") values" suffixOverrides=",">
		permission_id,permission_name,resource_type,permission,parent_id,
	</trim>
  </sql>
  <sql id="sql_values">
    <trim prefix="(" suffix=")" prefixOverrides=",">
		, #{item.permissionId}
		, #{item.permissionName}
		, #{item.resourceType}
		, #{item.permission}
		, #{item.parentId}
	</trim>	
  </sql>
  <sql id="sql_where">
    <where>
		<if test="null != item.permissionId">and permission_id = #{item.permissionId}</if>
		<if test="null != item.permissionName">and permission_name = #{item.permissionName}</if>
		<if test="null != item.resourceType">and resource_type = #{item.resourceType}</if>
		<if test="null != item.permission">and permission = #{item.permission}</if>
		<if test="null != item.parentId">and parent_id = #{item.parentId}</if>
	</where>
  </sql>
  <sql id="sql_update">
    update workflow_permission set 
	<trim prefix="" suffix="" prefixOverrides=",">
		<if test="null != item.permissionId">, permission_id = #{item.permissionId}</if>
		<if test="null != item.permissionName">, permission_name = #{item.permissionName}</if>
		<if test="null != item.resourceType">, resource_type = #{item.resourceType}</if>
		<if test="null != item.permission">, permission = #{item.permission}</if>
		<if test="null != item.parentId">, parent_id = #{item.parentId}</if>
	</trim>
	where  permission_id = #{item.permissionId}
  </sql>
  <sql id="sql_save_columns">
    insert into workflow_permission
	<trim prefix="(" suffix=") values" prefixOverrides=",">
		<if test="null != list[0].permissionId">, permission_id</if>
		<if test="null != list[0].permissionName">, permission_name</if>
		<if test="null != list[0].resourceType">, resource_type</if>
		<if test="null != list[0].permission">, permission</if>
		<if test="null != list[0].parentId">, parent_id</if>
	</trim>	
  </sql>
  <sql id="sql_save_values">
    <trim prefix="(" suffix=")" prefixOverrides=",">
		<if test="null != item.permissionId">, #{item.permissionId}</if>
		<if test="null != item.permissionName">, #{item.permissionName}</if>
		<if test="null != item.resourceType">, #{item.resourceType}</if>
		<if test="null != item.permission">, #{item.permission}</if>
		<if test="null != item.parentId">, #{item.parentId}</if>
	</trim>	
  </sql>
  <insert id="batchInsert" parameterType="java.util.List">
    <include refid="sql_columns" />
	<foreach collection="list" index="index" item="item" open="" separator="," close="">
	  <include refid="sql_values" />
	</foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="java.util.List">
    <include refid="sql_save_columns" />
	<foreach collection="list" index="index" item="item" open="" separator="," close="">
	  <include refid="sql_save_values" />
	</foreach>
  </insert>
  <update id="batchUpdateByPrimaryKey">
    <foreach collection="list" index="index" item="item" open="" separator=";" close="">
	  <include refid="sql_update" />
	</foreach>
  </update>
  <insert id="insertSelective" parameterType="cn.netinnet.workflow.user.domain.WorkflowPermission">
    insert into workflow_permission
	<trim prefix="(" suffix=") " suffixOverrides=",">
		<if test="null != permissionId"> permission_id,</if>
		<if test="null != permissionName"> permission_name,</if>
		<if test="null != resourceType"> resource_type,</if>
		<if test="null != permission"> permission,</if>
		<if test="null != parentId"> parent_id,</if>
	</trim>
	 <trim prefix=" values(" suffix=")" suffixOverrides=",">
		<if test="null != permissionId"> #{permissionId,jdbcType=BIGINT},</if>
		<if test="null != permissionName"> #{permissionName,jdbcType=VARCHAR},</if>
		<if test="null != resourceType"> #{resourceType,jdbcType=VARCHAR},</if>
		<if test="null != permission"> #{permission,jdbcType=VARCHAR},</if>
		<if test="null != parentId"> #{parentId,jdbcType=BIGINT},</if>
	</trim>
  </insert>
  <delete id="batchDeleteByArray">
    delete from workflow_permission where permission_id in
	<foreach collection="array" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <delete id="batchDeleteByList">
    delete from workflow_permission where permission_id in
	<foreach collection="list" index="index" item="item" open="(" separator="," close=")">#{item}</foreach>
  </delete>
  <select id="getList" parameterType="cn.netinnet.workflow.user.domain.WorkflowPermission" resultMap="BaseResultMap">
     select permission_id,permission_name, resource_type, permission, parent_id from workflow_permission
    <include refid="sql_where" />
  </select>
</mapper>